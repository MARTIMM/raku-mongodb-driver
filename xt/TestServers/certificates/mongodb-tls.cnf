# https://www.mongodb.com/docs/manual/appendix/security/appendixA-openssl-ca/

# OpenSSL CA Certificate for Testing

# openssl genrsa -out mongodb-test-ca.key 4096
# openssl req -new -x509 -days 1826 -key mongodb-test-ca.key -out mongodb-test-ca.crt -config openssl-test-ca.cnf
# openssl genrsa -out mongodb-test-ia.key 4096
# openssl req -new -key mongodb-test-ia.key -out mongodb-test-ia.csr -config openssl-test-ca.cnf
# openssl x509 -sha256 -req -days 730 -in mongodb-test-ia.csr -CA mongodb-test-ca.crt -CAkey mongodb-test-ca.key -set_serial 01 -out mongodb-test-ia.crt -extfile openssl-test-ca.cnf -extensions v3-ca
# cat mongodb-test-ia.crt mongodb-test-ca.crt > test-ca.pem



# OpenSSL Server Certificates for Testing

# openssl genrsa -out mongodb-test-server1.key 4096
# openssl req -new -key mongodb-test-server1.key -out mongodb-test-server1.csr -config openssl-test-server.cnf
# openssl x509 -sha256 -req -days 365 -in mongodb-test-server1.csr -CA mongodb-test-ia.crt -CAkey mongodb-test-ia.key -CAcreateserial -out mongodb-test-server1.crt -extfile openssl-test-server.cnf -extensions v3-req
# cat mongodb-test-server1.crt mongodb-test-server1.key > test-server1.pem

# mongod --tlsMode requireTLS --tlsCertificateKeyFile test-server1.pem  --tlsCAFile test-ca.pem

# before 4.0
# mongod --sslMode requireSSL --sslPEMKeyFile test-server1.pem  --sslCAFile test-ca.pem

#-------------------------------------------------------------------------------
#  Fields not in a section are [req] defaults
default_bits = 4096
default_md = sha256
prompt = no
input_password = testserver
days = 36500

# For the CA policy
[ policy_match ]
countryName = match
stateOrProvinceName = match
organizationName = match
organizationalUnitName = optional
commonName = supplied
emailAddress = optional

[ req-dn ]
countryName = NL
stateOrProvinceName = Noord-Holland
localityName = Haarlem
organizationName = Developer Corp
organizationalUnitName = Raku Department
commonName = github.martimm.io
emailAddress = mt1957@gmail.com



[ req-base ]
#default_bits = 4096
#default_keyfile = myTestCertificateKey.pem    ## The default private key file name.
#default_keyfile = myTestServerCertificateKey.pem    ## The default private key file name.
#default_md = sha256                           ## Use SHA-256 for Signatures
distinguished_name = req-dn
req_extensions = v3-req
x509_extensions = v3-ca # The extensions to add to the self signed cert
#prompt = no
#input_password = testserver

[ v3-req ]
subjectKeyIdentifier  = hash
basicConstraints = CA:FALSE
keyUsage = critical, digitalSignature, keyEncipherment
nsComment = "OpenSSL Generated Certificate for TESTING only.  NOT FOR PRODUCTION USE."
extendedKeyUsage = serverAuth, clientAuth

[ v3-ca ]
# Extensions for a typical CA
subjectKeyIdentifier = hash
basicConstraints = critical,CA:true
authorityKeyIdentifier = keyid:always,issuer:always



# options -config mdb.cnf -section req-server
[ req-server ]
default_bits = 4096
distinguished_name = req-dn
req_extensions = v3-req-server

[ v3-req-server ]
subjectKeyIdentifier  = hash
basicConstraints = CA:FALSE
keyUsage = critical, digitalSignature, keyEncipherment
nsComment = "OpenSSL Generated Certificate for TESTING only.  NOT FOR PRODUCTION USE."
extendedKeyUsage = serverAuth, clientAuth
subjectAltName = DNS:locahost.localdomain



# options -config mdb.cnf -section req-server
[ req-client ]
default_bits = 4096
distinguished_name = req-dn
req_extensions = v3-req-client

[ v3-req-client ]
subjectKeyIdentifier  = hash
basicConstraints = CA:FALSE
keyUsage = critical, digitalSignature, keyEncipherment
nsComment = "OpenSSL Generated Certificate for TESTING only.  NOT FOR PRODUCTION USE."
extendedKeyUsage = serverAuth, clientAuth



